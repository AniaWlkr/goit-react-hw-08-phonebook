{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/commonStyles/linkComStyles.module.css","components/UserMenu/UserMenu.module.css","components/Button/Button.jsx","components/Button/index.js","components/Loader/Loader.jsx","redux/auth/auth-actions.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/Loader/Loader.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","components/routes.js","components/Container/Container.jsx","components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","App/App.jsx","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","registerUser","userCredentials","dispatch","a","actions","registerUserRequest","post","response","console","log","data","registerUserSuccess","alert","registerUserError","message","loginUser","loginRequest","loginSuccess","loginError","logoutUser","logoutRequest","then","logoutSuccess","catch","error","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","getIsAuthorized","state","Boolean","getUserName","user","name","module","exports","Button","title","type","cbOnClick","cbArgs","className","onClick","Loader","styles","ldsSpinner","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeContactRequest","changeContactSuccess","changeContactError","changeFilter","items","createReducer","_","payload","find","contact","number","filter","id","map","loading","combineReducers","initialUserState","email","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","Container","children","container","connect","isAuthorized","selectors","to","routes","exact","classnames","commonStyles","link","linkHome","activeClassName","activeLink","userName","handleLogout","operations","greeting","button","AuthNav","linkRegister","header","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","this","props","fallback","path","component","render","Component","mapDispatchToProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca1b10b3.chunk.js","sourcesContent":["import axios from 'axios';\nimport actions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst registerUser = userCredentials => async dispatch => {\n  dispatch(actions.registerUserRequest());\n\n  try {\n    const response = await axios.post('/users/signup', userCredentials);\n\n    console.log(response);\n    token.set(response.data.token);\n\n    dispatch(actions.registerUserSuccess(response.data));\n  } catch (error) {\n    alert('User credentials are invalid');\n    dispatch(actions.registerUserError(error.message));\n  }\n};\n\nconst loginUser = userCredentials => async dispatch => {\n  dispatch(actions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', userCredentials);\n\n    token.set(response.data.token);\n    dispatch(actions.loginSuccess(response.data));\n  } catch (error) {\n    alert('User credentials are invalid');\n    dispatch(actions.loginError(error.message));\n  }\n};\n\nconst logoutUser = () => dispatch => {\n  dispatch(actions.logoutRequest());\n\n  return axios\n    .post('/users/logout')\n    .then(() => {\n      token.unset();\n      dispatch(actions.logoutSuccess());\n    })\n    .catch(error => dispatch(actions.logoutError(error.message)));\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(actions.getCurrentUserRequest());\n\n  return axios\n    .get('/users/current')\n    .then(({ data }) => dispatch(actions.getCurrentUserSuccess(data)))\n    .catch(error => dispatch(actions.getCurrentUserError(error.message)));\n};\n\nexport default { registerUser, loginUser, logoutUser, getCurrentUser };\n","const getIsAuthorized = state => Boolean(state.auth.token);\nconst getUserName = state => state.auth.user.name;\n\nexport default { getIsAuthorized, getUserName };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"linkComStyles_link__3w1LC\",\"activeLink\":\"linkComStyles_activeLink__1fWsy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__GgYhE\",\"greeting\":\"UserMenu_greeting__uNhbv\",\"button\":\"UserMenu_button__3mTE-\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ title, type = 'button', cbOnClick, cbArgs, className }) => {\n  return cbOnClick ? (\n    <button\n      type={type}\n      className={className}\n      onClick={cbArgs ? () => cbOnClick(...cbArgs) : cbOnClick}\n    >\n      {title}\n    </button>\n  ) : (\n    <button type={type} className={className}>\n      {title}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string,\n  type: PropTypes.string,\n  cbOnClick: PropTypes.func,\n  cbArgs: PropTypes.array,\n  className: PropTypes.string,\n};\n\nexport default Button;\n","export { default } from './Button';\n","import React from 'react';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={styles.ldsSpinner}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerUserRequest = createAction('auth/registerUserRequest');\nconst registerUserSuccess = createAction('auth/registerUserSuccess');\nconst registerUserError = createAction('auth/registerUserError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerUserRequest,\n  registerUserSuccess,\n  registerUserError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkHome\":\"Navigation_linkHome__EX8tY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkRegister\":\"AuthNav_linkRegister__3ESGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsSpinner\":\"Loader_ldsSpinner__2uzs8\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeContactRequest = createAction(\n  'contacts/changeContactRequest',\n);\nexport const changeContactSuccess = createAction(\n  'contacts/changeContactSuccess',\n);\nexport const changeContactError = createAction('contacts/changeContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n\nconst {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeContactRequest,\n  changeContactSuccess,\n  changeContactError,\n  changeFilter,\n} = actions;\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) =>\n    !state.find(contact => contact.number === payload.number)\n      ? [...state, payload]\n      : state,\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [changeContactSuccess]: (state, { payload }) =>\n    state.map(contact => (contact.id === payload.id ? payload : contact)),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n\n  [changeContactRequest]: () => true,\n  [changeContactSuccess]: () => false,\n  [changeContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [actions.registerUserSuccess]: (_, { payload }) => payload.user,\n  [actions.loginSuccess]: (_, { payload }) => payload.user,\n  [actions.logoutSuccess]: () => initialUserState,\n  [actions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [actions.registerUserSuccess]: (_, { payload }) => payload.token,\n  [actions.loginSuccess]: (_, { payload }) => payload.token,\n  [actions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [actions.registerUserError]: (_, { payload }) => payload,\n  [actions.loginError]: (_, { payload }) => payload,\n  [actions.logoutError]: (_, { payload }) => payload,\n  [actions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ user, token, error });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst persistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","export default {\n  home: '/',\n  contacts: '/contacts',\n  register: '/register',\n  login: '/login',\n};\n","import React from 'react';\nimport styles from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n\nexport default Container;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport commonStyles from '../commonStyles/linkComStyles.module.css';\nimport styles from './Navigation.module.css';\nimport classnames from 'classnames';\nimport routes from '../routes';\nimport { selectors } from '../../redux/auth';\n\nconst Navigation = ({ isAuthorized }) => {\n  return (\n    <nav>\n      <NavLink\n        to={routes.home}\n        exact\n        className={classnames(commonStyles.link, styles.linkHome)}\n        activeClassName={commonStyles.activeLink}\n      >\n        Home\n      </NavLink>\n      {isAuthorized && (\n        <NavLink\n          to={routes.contacts}\n          exact\n          className={commonStyles.link}\n          activeClassName={commonStyles.activeLink}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nNavigation.propTypes = {\n  isAuthorized: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isAuthorized: selectors.getIsAuthorized(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport { operations, selectors } from '../../redux/auth';\nimport styles from './UserMenu.module.css';\n\nconst UserMenu = ({ userName, handleLogout }) => {\n  return (\n    <div className={styles.container}>\n      <p className={styles.greeting}>Welcome, {userName}</p>\n      <Button\n        title=\"Logout\"\n        cbOnClick={handleLogout}\n        className={styles.button}\n      />\n    </div>\n  );\n};\n\nUserMenu.propTypes = {\n  handleLogout: PropTypes.func,\n  userName: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  userName: selectors.getUserName(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleLogout: () => dispatch(operations.logoutUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\nimport commonStyles from '../commonStyles/linkComStyles.module.css';\nimport classnames from 'classnames';\nimport routes from '../routes';\n\nconst AuthNav = () => {\n  return (\n    <div>\n      <NavLink\n        to={routes.register}\n        className={classnames(styles.linkRegister, commonStyles.link)}\n        activeClassName={commonStyles.activeLink}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        to={routes.login}\n        className={commonStyles.link}\n        activeClassName={commonStyles.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n};\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { selectors } from '../../redux/auth';\nimport styles from './AppBar.module.css';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\n\nconst AppBar = ({ isAuthorized }) => {\n  return (\n    <header className={styles.header}>\n      <Navigation />\n      {isAuthorized ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nAppBar.propTypes = {\n  isAuthorized: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isAuthorized: selectors.getIsAuthorized(state),\n});\n\nexport default connect(mapStateToProps, null)(AppBar);\n","import React, { Component, lazy, Suspense } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport routes from '../components/routes';\nimport { operations, selectors } from '../redux/auth';\nimport Container from '../components/Container';\nimport AppBar from '../components/AppBar';\nimport Loader from '../components/Loader';\n\nconst HomePage = lazy(() => import('../components/Pages/HomePage'));\nconst RegisterPage = lazy(() => import('../components/Pages/RegisterPage'));\nconst LoginPage = lazy(() => import('../components/Pages/LoginPage'));\nconst ContactsPage = lazy(() => import('../components/Pages/ContactsPage'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    const { isAuthorized } = this.props;\n\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path={routes.home} component={HomePage} />\n            <Route\n              path={routes.register}\n              render={props =>\n                !isAuthorized ? (\n                  <RegisterPage {...props} />\n                ) : (\n                  <Redirect to={routes.contacts} />\n                )\n              }\n            />\n            <Route\n              path={routes.login}\n              render={props =>\n                !isAuthorized ? (\n                  <LoginPage {...props} />\n                ) : (\n                  <Redirect to={routes.contacts} />\n                )\n              }\n            />\n            <Route\n              path={routes.contacts}\n              render={props =>\n                isAuthorized ? (\n                  <ContactsPage {...props} />\n                ) : (\n                  <Redirect to={routes.login} />\n                )\n              }\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  getCurrentUser: PropTypes.func,\n  isAuthorized: PropTypes.bool,\n};\n\nconst mapDispatchToProps = {\n  getCurrentUser: operations.getCurrentUser,\n};\n\nconst mapStateToProps = state => ({\n  isAuthorized: selectors.getIsAuthorized(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}