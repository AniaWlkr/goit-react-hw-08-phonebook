{"version":3,"sources":["components/commonStyles/formComStyles.module.css","components/Pages/ContactsPage/Contacts.module.css","components/ContactList/ContactList.module.css","components/ContactFilter/ContactFilter.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactList/ContactList.jsx","components/Pages/ContactsPage/Contacts.jsx"],"names":["module","exports","contact","dispatch","actions","axios","post","then","data","catch","error","message","contactId","delete","get","getFilter","state","contacts","filter","getLoading","loading","getFilteredContacts","createSelector","items","name","toLowerCase","includes","ContactForm","number","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","newContact","props","addContact","onSubmit","this","className","styles","form","label","type","pattern","title","required","onChange","input","Button","button","Component","connect","operations","selectors","changeFilter","target","role","aria-label","icon","isLoadingContacts","handleDelete","section","Loader","length","list","map","item","cbOnClick","cbArgs","id","notification","Contacts","useDispatch","useEffect","container","headTitle"],"mappings":"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","file":"static/js/3.d3f6a940.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formComStyles_form__NVSrP\",\"label\":\"formComStyles_label__1RJmi\",\"input\":\"formComStyles_input__2jYTY\",\"icon\":\"formComStyles_icon__2tha-\",\"button\":\"formComStyles_button__32-oN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__KBsS8\",\"headTitle\":\"Contacts_headTitle__3ST72\",\"title\":\"Contacts_title__1QZUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactList_section__3fuU2\",\"button\":\"ContactList_button__1RuFy\",\"input\":\"ContactList_input__3YLqK\",\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"notification\":\"ContactList_notification__3Is9a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__2Us6J\",\"icon\":\"ContactFilter_icon__-aHW7\",\"input\":\"ContactFilter_input__1RqJv\"};","import axios from 'axios';\nimport * as actions from './contacts-actions';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  return axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error.message)));\n};\n\nconst addContact = contact => dispatch => {\n  dispatch(actions.addContactRequest());\n\n  return axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  return axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\n    .catch(error => dispatch(actions.deleteContactError(error.message)));\n};\n\nconst changeContact = contactId => dispatch => {\n  dispatch(actions.changeContactRequest());\n\n  return axios\n    .patch(`/contacts/${contactId}`)\n    .then(({ data }) => dispatch(actions.changeContactSuccess(data)))\n    .catch(error => dispatch(actions.changeContactError(error.message)));\n};\n\nexport default { addContact, deleteContact, fetchContacts, changeContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (items, filter) => {\n    return filter\n      ? items.filter(({ name }) =>\n          name.toLowerCase().includes(filter.toLowerCase()),\n        )\n      : items;\n  },\n);\n\nexport default { getLoading, getFilteredContacts, getFilter };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from '../commonStyles/formComStyles.module.css';\nimport { operations } from '../../redux/contacts';\nimport Button from '../Button/Button';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func,\n    addContact: PropTypes.func,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const newContact = {\n      // id: v4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.addContact(newContact);\n    this.setState({ name: '' });\n    this.setState({ number: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <label className={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n              className={styles.input}\n            />\n          </label>\n          <label className={styles.label}>\n            Phone number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n              className={styles.input}\n            />\n          </label>\n          <Button\n            type=\"submit\"\n            title=\"Add contact &nbsp; ✅\"\n            className={styles.button}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: newContact => dispatch(operations.addContact(newContact)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactFilter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter, selectors } from '../../redux/contacts';\n\nconst ContactFilter = ({ value, handleChange }) => {\n  return (\n    <div>\n      <label className={styles.label}>\n        <span role=\"img\" aria-label=\"loupe icon\" className={styles.icon}>\n          🔎\n        </span>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nContactFilter.propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    value: selectors.getFilter(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleChange: event => dispatch(changeFilter(event.target.value)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport Loader from '../Loader';\nimport { operations, selectors } from '../../redux/contacts';\nimport Button from '../Button/Button';\n\nconst ContactList = ({\n  contacts,\n  handleDelete,\n  // handleChange,\n  isLoadingContacts,\n}) => (\n  <div className={styles.section}>\n    <ContactFilter />\n    {isLoadingContacts && <Loader />}\n    {contacts.length ? (\n      <ul className={styles.list}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={styles.item}>\n            {contact.name}: {contact.number}\n            {/* <Button\n              type=\"button\"\n              cbOnClick={handleChange}\n              cbArgs={[contact.id]}\n              className={styles.button}\n              title=\"Change &nbsp; 📝\"\n            /> */}\n            <Button\n              type=\"button\"\n              cbOnClick={handleDelete}\n              cbArgs={[contact.id]}\n              className={styles.button}\n              title=\"Delete &nbsp; ❌\"\n            />\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <p className={styles.notification}>\n        <span role=\"img\" aria-label=\"sad face icon\">\n          😔\n        </span>{' '}\n        No name in Phonebook\n      </p>\n    )}\n  </div>\n);\n\nContactList.propTypes = {\n  value: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  // handleChange: PropTypes.func,\n  handleDelete: PropTypes.func,\n  isLoadingContacts: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getFilteredContacts(state),\n  isLoadingContacts: selectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelete: contactId => dispatch(operations.deleteContact(contactId)),\n  // handleChange: contactId => dispatch(operations.changeContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './Contacts.module.css';\nimport { operations } from '../../../redux/contacts';\nimport ContactForm from '../../ContactForm';\nimport ContactList from '../../ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(operations.fetchContacts()), []);\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.headTitle}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.title}>Contacts</h2>\n      <ContactList />\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  fetchContacts: PropTypes.func,\n};\n\nexport default Contacts;\n"],"sourceRoot":""}